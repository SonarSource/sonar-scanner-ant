#
# ENV VARIABLES
#
env:
  ### Shared variables
  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]
  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer
  ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
  ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa

  BURGR_URL: VAULT[development/kv/data/burgr data.url]
  BURGR_USERNAME: VAULT[development/kv/data/burgr data.cirrus_username]
  BURGR_PASSWORD: VAULT[development/kv/data/burgr data.cirrus_password]

  ### Project variables
  DEPLOY_PULL_REQUEST: true
  ARTIFACTS: "\
    org.sonarsource.scanner.ant:ant:jar,\
    org.sonarsource.scanner.ant:sonarqube-ant-task:jar"
  NIGHTLY_CRON: 'nightly-cron'

#
# RE-USABLE CONFIGS
#
container_definition: &CONTAINER_DEFINITION
  image: ${CIRRUS_AWS_ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/base:j17-m3-latest
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  region: eu-central-1
  namespace: default

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

except_nightly_cron: &EXCEPT_ON_NIGHTLY_CRON
  only_if: $CIRRUS_CRON != $NIGHTLY_CRON

#
# TASKS
#
build_task:
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: VAULT[development/kv/data/next data.url]
    SIGN_KEY: VAULT[development/kv/data/sign data.key]
    PGP_PASSPHRASE: VAULT[development/kv/data/sign data.passphrase]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  script:
    - source cirrus-env BUILD
    - regular_mvn_build_deploy_analyze
  cleanup_before_cache_script:
    - cleanup_maven_repository

qa_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  eks_container:
    dockerfile: its/docker/Dockerfile
    docker_arguments:
      CIRRUS_AWS_ACCOUNT: ${CIRRUS_AWS_ACCOUNT}
      ANT_VERSION: 1.10.12
    cluster_name: ${CIRRUS_CLUSTER_NAME}
    builder_role: cirrus-builder
    builder_image: docker-builder-v*
    builder_instance_type: t2.small
    builder_subnet_id: ${CIRRUS_AWS_SUBNET}
    region: eu-central-1
    namespace: default
    cpu: 1.7
    memory: 5Gb
  env:
    matrix:
      - SQ_VERSION: LATEST_RELEASE[8.9]
      - SQ_VERSION: DEV
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  qa_script:
    - source cirrus-env QA
    - source set_maven_build_version $BUILD_NUMBER
    - cd its
    - mvn -B -e -Dsonar.runtimeVersion="$SQ_VERSION" -Dmaven.test.redirectTestOutputToFile=false verify
  cleanup_before_cache_script:
    - cleanup_maven_repository

promote_task:
  depends_on:
    - qa
  <<: *ONLY_SONARSOURCE_QA
  <<: *EXCEPT_ON_NIGHTLY_CRON
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 0.5
    memory: 500M
  maven_cache:
    folder: $CIRRUS_WORKING_DIR/.m2/repository
  env:
    GITHUB_TOKEN: VAULT[development/github/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promotion token]
    GCF_ACCESS_TOKEN: VAULT[development/kv/data/promote data.token]
    PROMOTE_URL: VAULT[development/kv/data/promote data.url]
  script:
    - cirrus_promote_maven
  cleanup_before_cache_script:
    - cleanup_maven_repository
